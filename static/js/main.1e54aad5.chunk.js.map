{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","selectTodo","className","map","todo","id","completed","classNames","title","type","onClick","TodoFilter","selectedValue","onSelection","query","onQuery","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onCloseModal","useState","user","setUser","loadingModal","setLoadingModal","useEffect","a","userId","userFound","href","email","name","App","setTodos","loading","setLoading","setSelectedTodo","setSelect","setQuery","todosLoaded","includesQuery","text","toLowerCase","includes","visibleTodos","filter","option","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e54aad5.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  selectTodo: (todo: Todo | null) => void\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  selectTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map((todo) => (\n        <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={classNames(\n                todo.completed ? 'has-text-success' : 'has-text-danger',\n              )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            {selectedTodo?.id === todo.id ? (\n              <button\n                data-cy=\"selectButton\"\n                className=\"button is-success\"\n                type=\"button\"\n                onClick={() => {\n                  selectTodo(null);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye-slash\" />\n                </span>\n              </button>\n            ) : (\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  selectTodo(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            )}\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","interface Props {\n  selectedValue: string;\n  onSelection: (option:string) => void;\n  query:string;\n  onQuery: (text:string) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  selectedValue,\n  onSelection,\n  query,\n  onQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          value={selectedValue}\n          onChange={(event) => onSelection(event.target.value)}\n          data-cy=\"statusSelect\"\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        value={query}\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        onChange={(event) => onQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            onClick={() => onQuery('')}\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  selectedTodo: Todo;\n  onCloseModal: (todo: Todo | null) => void;\n}\nexport const TodoModal: React.FC<Props> = ({ selectedTodo, onCloseModal }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loadingModal, setLoadingModal] = useState(true);\n\n  useEffect(() => {\n    (async () => {\n      const userFound = await getUser(selectedTodo.userId);\n\n      setUser(userFound);\n      setLoadingModal(false);\n    })();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {loadingModal ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {selectedTodo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              onClick={() => onCloseModal(null)}\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>{user?.name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [selectedValue, setSelect] = useState('all');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    (async () => {\n      const todosLoaded = await getTodos();\n\n      setTodos(todosLoaded);\n      setLoading(false);\n    })();\n  }, []);\n\n  const includesQuery = (text:string) => {\n    return text.toLowerCase().includes(query.toLowerCase());\n  };\n\n  const visibleTodos = [...todos].filter((todo) => {\n    switch (selectedValue) {\n      case 'completed':\n        return todo.completed && includesQuery(todo.title);\n      case 'active':\n        return !todo.completed && includesQuery(todo.title);\n      default:\n        return includesQuery(todo.title);\n    }\n  });\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectedValue={selectedValue}\n                onSelection={(option:string) => setSelect(option)}\n                query={query}\n                onQuery={(text:string) => setQuery(text)}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n              <TodoList\n                todos={visibleTodos}\n                selectedTodo={selectedTodo}\n                selectTodo={(todo:Todo | null) => setSelectedTodo(todo)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && <TodoModal selectedTodo={selectedTodo} onCloseModal={(todo:Todo | null) => setSelectedTodo(todo)} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}